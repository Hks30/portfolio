{"version":3,"file":"static/js/441.d26fddfc.chunk.js","mappings":"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","sources":["hooks/useParallax.js","components/StoryMap/ParallaxLayer.jsx"],"sourcesContent":["\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useParallax = (ref) => {\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    if (!ref.current) return;\r\n\r\n    const handleMouseMove = (e) => {\r\n      const { clientX, clientY } = e;\r\n      const { width, height } = window.innerWidth || document.documentElement.clientWidth;\r\n      \r\n      // Calculate position relative to center of screen\r\n      const x = clientX - width / 2;\r\n      const y = clientY - height / 2;\r\n      \r\n      setPosition({ x, y });\r\n    };\r\n\r\n    window.addEventListener('mousemove', handleMouseMove);\r\n    \r\n    return () => {\r\n      window.removeEventListener('mousemove', handleMouseMove);\r\n    };\r\n  }, [ref]);\r\n\r\n  return position;\r\n};\r\n\r\nexport default useParallax;","import React, { useRef, useEffect, useState, useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport useParallax from '../../hooks/useParallax';\r\n\r\nconst Layer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1;\r\n  pointer-events: none;\r\n`;\r\n\r\nconst Circle = styled.div`\r\n  position: absolute;\r\n  border-radius: 50%;\r\n  background-color: ${props => props.color || '#304878'};\r\n  opacity: ${props => props.opacity || 0.15};\r\n  width: ${props => `${props.size}vw`};\r\n  height: ${props => `${props.size}vw`};\r\n  max-width: ${props => `${props.maxSize}px`};\r\n  max-height: ${props => `${props.maxSize}px`};\r\n  top: ${props => props.top}%;\r\n  left: ${props => props.left}%;\r\n  transform: translate(${props => props.x}px, ${props => props.y}px);\r\n  transition: transform 0.2s ease-out;\r\n  box-shadow: 0 0 ${props => props.glow ? '15px' : '0'} ${props => props.glow ? props.color : 'transparent'};\r\n  animation: pulse 8s infinite ease-in-out;\r\n  animation-delay: ${props => props.delay}s;\r\n  \r\n  @keyframes pulse {\r\n    0% {\r\n      transform: translate(${props => props.x}px, ${props => props.y}px) scale(1);\r\n      opacity: ${props => props.opacity || 0.15};\r\n    }\r\n    50% {\r\n      transform: translate(${props => props.x}px, ${props => props.y}px) scale(1.1);\r\n      opacity: ${props => (props.opacity || 0.15) + 0.05};\r\n    }\r\n    100% {\r\n      transform: translate(${props => props.x}px, ${props => props.y}px) scale(1);\r\n      opacity: ${props => props.opacity || 0.15};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Star = styled.div`\r\n  position: absolute;\r\n  width: 2px;\r\n  height: 2px;\r\n  background-color: white;\r\n  opacity: ${props => props.opacity};\r\n  top: ${props => props.top}%;\r\n  left: ${props => props.left}%;\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 3px white;\r\n  animation: twinkle ${props => props.duration}s infinite ease-in-out;\r\n  animation-delay: ${props => props.delay}s;\r\n  \r\n  @keyframes twinkle {\r\n    0% { opacity: ${props => props.opacity}; }\r\n    50% { opacity: 0.1; }\r\n    100% { opacity: ${props => props.opacity}; }\r\n  }\r\n`;\r\n\r\nconst GradientPipeline = styled.div`\r\n  position: absolute;\r\n  width: 3px; /* Slightly wider */\r\n  height: 100%;\r\n  background: linear-gradient(to bottom, #ff4d79, #304878);\r\n  opacity: 0.6; /* Slightly more visible */\r\n  z-index: -1;\r\n  box-shadow: 0 0 8px rgba(255, 77, 121, 0.5); /* Added glow effect */\r\n  animation: flow 7s linear infinite, \r\n             pulseGlow 3s infinite ease-in-out,\r\n             widthPulse 5s infinite ease-in-out; /* Width animation */\r\n  \r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    width: 8px;\r\n    height: 8px;\r\n    background-color: #ff4d79;\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 10px #ff4d79, 0 0 20px #ff4d79;\r\n    opacity: 0.8;\r\n    animation: particleFlow 4s linear infinite;\r\n  }\r\n  \r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 30%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    width: 5px;\r\n    height: 5px;\r\n    background-color: #304878;\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 8px #304878;\r\n    opacity: 0.8;\r\n    animation: particleFlow 3s linear infinite 1.5s;\r\n  }\r\n\r\n  &:nth-child(1) {\r\n    left: 50%; /* Center pipeline */\r\n    animation-delay: 0s;\r\n    &::before { animation-delay: 0.5s; }\r\n    &::after { animation-delay: 2s; }\r\n  }\r\n\r\n  &:nth-child(2) {\r\n    left: 20%; /* Moved to left side */\r\n    width: 2px; /* Thinner */\r\n    opacity: 0.4;\r\n    animation-delay: 1s;\r\n    &::before { animation-delay: 1s; }\r\n    &::after { animation-delay: 3s; }\r\n  }\r\n\r\n  &:nth-child(3) {\r\n    left: 80%; /* Moved to right side */\r\n    width: 2px; /* Thinner */\r\n    opacity: 0.4;\r\n    animation-delay: 2s;\r\n    &::before { animation-delay: 1.5s; }\r\n    &::after { animation-delay: 4s; }\r\n  }\r\n\r\n  /* Add connectors between pipelines */\r\n  &:nth-child(2)::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 40%;\r\n    left: 0;\r\n    width: 30vw; /* Horizontal connector width */\r\n    height: 1px;\r\n    background: linear-gradient(to right, transparent, #304878, transparent);\r\n    opacity: 0.3;\r\n    animation: none;\r\n    box-shadow: 0 0 5px #304878;\r\n    transform: none;\r\n    border-radius: 0;\r\n  }\r\n\r\n  &:nth-child(3)::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 70%;\r\n    left: -30vw;\r\n    width: 30vw; /* Horizontal connector width */\r\n    height: 1px;\r\n    background: linear-gradient(to right, transparent, #ff4d79, transparent);\r\n    opacity: 0.3;\r\n    animation: none;\r\n    box-shadow: 0 0 5px #ff4d79;\r\n    transform: none;\r\n    border-radius: 0;\r\n  }\r\n\r\n  @keyframes flow {\r\n    0% {\r\n      transform: translateY(-100%);\r\n    }\r\n    100% {\r\n      transform: translateY(100%);\r\n    }\r\n  }\r\n\r\n  @keyframes pulseGlow {\r\n    0%, 100% {\r\n      opacity: 0.6;\r\n      box-shadow: 0 0 8px rgba(255, 77, 121, 0.5);\r\n    }\r\n    50% {\r\n      opacity: 0.8;\r\n      box-shadow: 0 0 15px rgba(255, 77, 121, 0.7);\r\n    }\r\n  }\r\n  \r\n  @keyframes widthPulse {\r\n    0%, 100% {\r\n      width: 3px;\r\n    }\r\n    50% {\r\n      width: 4px;\r\n    }\r\n  }\r\n  \r\n  @keyframes particleFlow {\r\n    0% {\r\n      top: -10px;\r\n      opacity: 0;\r\n    }\r\n    10% {\r\n      opacity: 0.8;\r\n    }\r\n    90% {\r\n      opacity: 0.8;\r\n    }\r\n    100% {\r\n      top: 100%;\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FloatingShapes = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: -1;\r\n\r\n  .shape {\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    background: linear-gradient(135deg, #ff4d79, #304878);\r\n    opacity: 0.1;\r\n    animation: float 10s infinite ease-in-out, rotate 20s infinite linear;\r\n  }\r\n\r\n  .shape.small {\r\n    width: 50px;\r\n    height: 50px;\r\n    top: 10%;\r\n    left: 20%;\r\n    animation-delay: 0s;\r\n  }\r\n\r\n  .shape.large {\r\n    width: 150px;\r\n    height: 150px;\r\n    top: 70%;\r\n    left: 80%;\r\n    animation-delay: 2s;\r\n  }\r\n\r\n  .shape.hexagon {\r\n    width: 80px;\r\n    height: 80px;\r\n    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);\r\n    background: linear-gradient(135deg, #304878, #ff4d79);\r\n    top: 40%;\r\n    left: 50%;\r\n    animation-delay: 1s;\r\n  }\r\n\r\n  @keyframes float {\r\n    0%, 100% {\r\n      transform: translateY(0);\r\n    }\r\n    50% {\r\n      transform: translateY(-20px);\r\n    }\r\n  }\r\n\r\n  @keyframes rotate {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackgroundGlow = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: radial-gradient(circle at center, rgba(255, 77, 121, 0.2), rgba(48, 72, 120, 0.1));\r\n  z-index: -2;\r\n  animation: glowPulse 5s infinite ease-in-out;\r\n\r\n  @keyframes glowPulse {\r\n    0%, 100% {\r\n      opacity: 0.2;\r\n    }\r\n    50% {\r\n      opacity: 0.4;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ParallaxLayer = () => {\r\n  const ref = useRef(null);\r\n  const { x, y } = useParallax(ref);\r\n  const [mouseX, setMouseX] = useState(0);\r\n  const [mouseY, setMouseY] = useState(0);\r\n\r\n  // Generate stars and circles within the component using useMemo\r\n  const stars = useMemo(() => {\r\n    const isDesktop = window.innerWidth > 768;\r\n    return Array.from({ length: isDesktop ? 50 : 25 }).map(() => ({\r\n      top: Math.random() * 100,\r\n      left: Math.random() * 100,\r\n      opacity: Math.random() * 0.5 + 0.5,\r\n      duration: Math.random() * 5 + 5,\r\n      delay: Math.random() * 5,\r\n    }));\r\n  }, []);\r\n\r\n  const circles = useMemo(() => {\r\n    const isDesktop = window.innerWidth > 768;\r\n    return Array.from({ length: isDesktop ? 10 : 5 }).map(() => ({\r\n      size: Math.random() * 5 + 2,\r\n      maxSize: Math.random() * 100 + 50,\r\n      top: Math.random() * 100,\r\n      left: Math.random() * 100,\r\n      color: `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(\r\n        Math.random() * 255\r\n      )}, ${Math.floor(Math.random() * 255)}, 0.5)`,\r\n      opacity: Math.random() * 0.5 + 0.5,\r\n      factor: Math.random() * 2 + 1,\r\n      glow: Math.random() > 0.5,\r\n      delay: Math.random() * 5,\r\n    }));\r\n  }, []);\r\n\r\n  // Generate binary code for code effect\r\n  const binaryCode = useMemo(() => {\r\n    let code = '';\r\n    for (let i = 0; i < 500; i++) {\r\n      code += Math.random() > 0.5 ? '1' : '0';\r\n      if (i % 8 === 7) code += ' ';\r\n      if (i % 40 === 39) code += '\\n';\r\n    }\r\n    return code;\r\n  }, []);\r\n\r\n  const handleMouseMove = (e) => {\r\n    const { clientX, clientY, currentTarget } = e;\r\n    const rect = currentTarget.getBoundingClientRect();\r\n    setMouseX((clientX - rect.left) / rect.width - 0.5);\r\n    setMouseY((clientY - rect.top) / rect.height - 0.5);\r\n  };\r\n\r\n  return (\r\n    <div ref={ref} onMouseMove={handleMouseMove}>\r\n      <BackgroundGlow />\r\n      <Layer>\r\n        <FloatingShapes>\r\n          <div\r\n            className=\"shape small\"\r\n            style={{\r\n              transform: `translate(${mouseX * 10}px, ${mouseY * 10}px)`,\r\n            }}\r\n          ></div>\r\n          <div\r\n            className=\"shape large\"\r\n            style={{\r\n              transform: `translate(${mouseX * -15}px, ${mouseY * -15}px)`,\r\n            }}\r\n          ></div>\r\n          <div\r\n            className=\"shape hexagon\"\r\n            style={{\r\n              transform: `translate(${mouseX * 5}px, ${mouseY * 5}px)`,\r\n            }}\r\n          ></div>\r\n        </FloatingShapes>\r\n\r\n        <GradientPipeline />\r\n        <GradientPipeline />\r\n        <GradientPipeline />\r\n\r\n      \r\n\r\n        {/* Stars */}\r\n        {stars.map((star, index) => (\r\n          <Star\r\n            key={`star-${index}`}\r\n            top={star.top + mouseY * 5}\r\n            left={star.left + mouseX * 5}\r\n            opacity={star.opacity}\r\n            duration={star.duration}\r\n            delay={star.delay}\r\n            animate={true}\r\n          />\r\n        ))}\r\n\r\n        {/* Circles */}\r\n        {circles.map((circle, index) => (\r\n          <Circle\r\n            key={index}\r\n            size={circle.size}\r\n            maxSize={circle.maxSize}\r\n            top={circle.top}\r\n            left={circle.left}\r\n            color={circle.color}\r\n            opacity={circle.opacity}\r\n            x={x * circle.factor * -1 + mouseX * 10}\r\n            y={y * circle.factor * -1 + mouseY * 10}\r\n            glow={circle.glow}\r\n            delay={circle.delay}\r\n            animate={true}\r\n          />\r\n        ))}\r\n      </Layer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ParallaxLayer;"],"names":["ref","position","setPosition","useState","x","y","useEffect","current","handleMouseMove","e","clientX","clientY","width","height","window","innerWidth","document","documentElement","clientWidth","addEventListener","removeEventListener","Layer","styled","div","Circle","props","color","opacity","size","maxSize","top","left","glow","delay","Star","duration","GradientPipeline","FloatingShapes","BackgroundGlow","ParallaxLayer","useRef","useParallax","mouseX","setMouseX","mouseY","setMouseY","stars","useMemo","isDesktop","Array","from","length","map","Math","random","circles","floor","factor","code","i","_jsxs","onMouseMove","currentTarget","rect","getBoundingClientRect","children","_jsx","className","style","transform","star","index","animate","circle"],"sourceRoot":""}